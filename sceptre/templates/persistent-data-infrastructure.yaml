---
Description: Airflow resources that persist between cluster deploys - e.g., metadata DB, Queue, and log bucket.

Parameters:
  SecurityGroup:
    Type: String
  PostgresUser:
    Type: String
  PostgresPW:
    Type: String

Resources:

  # securityGroup: TODO - make the security group here ?
  #  Type: "AWS::EC2:SecurityGroup"
  #  Properties:

  logBucket:
      Type: "AWS::S3::Bucket"

  logBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref logBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: 'arn:aws:iam::008963853103:role/Administrator' # TODO - use SSM to provide this
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${logBucket}'
          - Effect: Allow
            Principal: '*'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${logBucket}'
            Condition:
              StringEquals:
                'aws:SourceVpc': vpc-d92765bf

  # Note: After this metaDB is created, 'airflow initdb' needs to be run on it (from a docker container)

  metaDataDB:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: '0.5'
      BackupRetentionPeriod: 0
      DBInstanceClass: db.m1.small
      Engine: PostgreSQL
      MasterUsername: !Ref PostgresUser
      MasterUserPassword: !Ref PostgresPW
      PubliclyAccessible: False
      VPCSecurityGroups:
        - !Ref SecurityGroup

  eventQueue:
    Type: "AWS::ElastiCache::CacheCluster"
    Properties:
      CacheNodeType: cache.t2.micro
      CacheSubnetGroupName: cbattista-local # TODO - create this rather than using the existing one...
      Engine: redis
      NumCacheNodes: 1
      VpcSecurityGroupIds:
        - !Ref SecurityGroup

Outputs:
  metadataDBAddress:
    Value: !GetAtt metaDataDB.Endpoint.Address

  metadataDBPost:
    Value: !GetAtt metaDataDB.Endpoint.Port

  eventQueueAddress:
    Value: !GetAtt eventQueue.RedisEndpoint.Address

  eventQueuePort:
    Value: !GetAtt eventQueue.RedisEndpoint.Port
